Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     expression -> PROPOSITION
Rule 3     expression -> expression AND expression
Rule 4     expression -> expression OR expression
Rule 5     expression -> expression IMPLICATION expression
Rule 6     expression -> expression BICONDITIONAL expression
Rule 7     expression -> NOT expression
Rule 8     expression -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 3
BICONDITIONAL        : 6
IMPLICATION          : 5
LPAREN               : 8
NOT                  : 7
OR                   : 4
PROPOSITION          : 2
RPAREN               : 8
error                : 

Nonterminals, with rules where they appear

expression           : 1 3 3 4 4 5 5 6 6 7 8
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) expression -> . PROPOSITION
    (3) expression -> . expression AND expression
    (4) expression -> . expression OR expression
    (5) expression -> . expression IMPLICATION expression
    (6) expression -> . expression BICONDITIONAL expression
    (7) expression -> . NOT expression
    (8) expression -> . LPAREN expression RPAREN

    PROPOSITION     shift and go to state 3
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5

    statement                      shift and go to state 1
    expression                     shift and go to state 2

state 1

    (0) S' -> statement .



state 2

    (1) statement -> expression .
    (3) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (5) expression -> expression . IMPLICATION expression
    (6) expression -> expression . BICONDITIONAL expression

    $end            reduce using rule 1 (statement -> expression .)
    AND             shift and go to state 6
    OR              shift and go to state 7
    IMPLICATION     shift and go to state 8
    BICONDITIONAL   shift and go to state 9


state 3

    (2) expression -> PROPOSITION .

    AND             reduce using rule 2 (expression -> PROPOSITION .)
    OR              reduce using rule 2 (expression -> PROPOSITION .)
    IMPLICATION     reduce using rule 2 (expression -> PROPOSITION .)
    BICONDITIONAL   reduce using rule 2 (expression -> PROPOSITION .)
    $end            reduce using rule 2 (expression -> PROPOSITION .)
    RPAREN          reduce using rule 2 (expression -> PROPOSITION .)


state 4

    (7) expression -> NOT . expression
    (2) expression -> . PROPOSITION
    (3) expression -> . expression AND expression
    (4) expression -> . expression OR expression
    (5) expression -> . expression IMPLICATION expression
    (6) expression -> . expression BICONDITIONAL expression
    (7) expression -> . NOT expression
    (8) expression -> . LPAREN expression RPAREN

    PROPOSITION     shift and go to state 3
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5

    expression                     shift and go to state 10

state 5

    (8) expression -> LPAREN . expression RPAREN
    (2) expression -> . PROPOSITION
    (3) expression -> . expression AND expression
    (4) expression -> . expression OR expression
    (5) expression -> . expression IMPLICATION expression
    (6) expression -> . expression BICONDITIONAL expression
    (7) expression -> . NOT expression
    (8) expression -> . LPAREN expression RPAREN

    PROPOSITION     shift and go to state 3
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5

    expression                     shift and go to state 11

state 6

    (3) expression -> expression AND . expression
    (2) expression -> . PROPOSITION
    (3) expression -> . expression AND expression
    (4) expression -> . expression OR expression
    (5) expression -> . expression IMPLICATION expression
    (6) expression -> . expression BICONDITIONAL expression
    (7) expression -> . NOT expression
    (8) expression -> . LPAREN expression RPAREN

    PROPOSITION     shift and go to state 3
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5

    expression                     shift and go to state 12

state 7

    (4) expression -> expression OR . expression
    (2) expression -> . PROPOSITION
    (3) expression -> . expression AND expression
    (4) expression -> . expression OR expression
    (5) expression -> . expression IMPLICATION expression
    (6) expression -> . expression BICONDITIONAL expression
    (7) expression -> . NOT expression
    (8) expression -> . LPAREN expression RPAREN

    PROPOSITION     shift and go to state 3
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5

    expression                     shift and go to state 13

state 8

    (5) expression -> expression IMPLICATION . expression
    (2) expression -> . PROPOSITION
    (3) expression -> . expression AND expression
    (4) expression -> . expression OR expression
    (5) expression -> . expression IMPLICATION expression
    (6) expression -> . expression BICONDITIONAL expression
    (7) expression -> . NOT expression
    (8) expression -> . LPAREN expression RPAREN

    PROPOSITION     shift and go to state 3
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5

    expression                     shift and go to state 14

state 9

    (6) expression -> expression BICONDITIONAL . expression
    (2) expression -> . PROPOSITION
    (3) expression -> . expression AND expression
    (4) expression -> . expression OR expression
    (5) expression -> . expression IMPLICATION expression
    (6) expression -> . expression BICONDITIONAL expression
    (7) expression -> . NOT expression
    (8) expression -> . LPAREN expression RPAREN

    PROPOSITION     shift and go to state 3
    NOT             shift and go to state 4
    LPAREN          shift and go to state 5

    expression                     shift and go to state 15

state 10

    (7) expression -> NOT expression .
    (3) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (5) expression -> expression . IMPLICATION expression
    (6) expression -> expression . BICONDITIONAL expression

    AND             reduce using rule 7 (expression -> NOT expression .)
    OR              reduce using rule 7 (expression -> NOT expression .)
    IMPLICATION     reduce using rule 7 (expression -> NOT expression .)
    BICONDITIONAL   reduce using rule 7 (expression -> NOT expression .)
    $end            reduce using rule 7 (expression -> NOT expression .)
    RPAREN          reduce using rule 7 (expression -> NOT expression .)

  ! AND             [ shift and go to state 6 ]
  ! OR              [ shift and go to state 7 ]
  ! IMPLICATION     [ shift and go to state 8 ]
  ! BICONDITIONAL   [ shift and go to state 9 ]


state 11

    (8) expression -> LPAREN expression . RPAREN
    (3) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (5) expression -> expression . IMPLICATION expression
    (6) expression -> expression . BICONDITIONAL expression

    RPAREN          shift and go to state 16
    AND             shift and go to state 6
    OR              shift and go to state 7
    IMPLICATION     shift and go to state 8
    BICONDITIONAL   shift and go to state 9


state 12

    (3) expression -> expression AND expression .
    (3) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (5) expression -> expression . IMPLICATION expression
    (6) expression -> expression . BICONDITIONAL expression

    AND             reduce using rule 3 (expression -> expression AND expression .)
    $end            reduce using rule 3 (expression -> expression AND expression .)
    RPAREN          reduce using rule 3 (expression -> expression AND expression .)
    OR              shift and go to state 7
    IMPLICATION     shift and go to state 8
    BICONDITIONAL   shift and go to state 9

  ! OR              [ reduce using rule 3 (expression -> expression AND expression .) ]
  ! IMPLICATION     [ reduce using rule 3 (expression -> expression AND expression .) ]
  ! BICONDITIONAL   [ reduce using rule 3 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 6 ]


state 13

    (4) expression -> expression OR expression .
    (3) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (5) expression -> expression . IMPLICATION expression
    (6) expression -> expression . BICONDITIONAL expression

    AND             reduce using rule 4 (expression -> expression OR expression .)
    OR              reduce using rule 4 (expression -> expression OR expression .)
    $end            reduce using rule 4 (expression -> expression OR expression .)
    RPAREN          reduce using rule 4 (expression -> expression OR expression .)
    IMPLICATION     shift and go to state 8
    BICONDITIONAL   shift and go to state 9

  ! IMPLICATION     [ reduce using rule 4 (expression -> expression OR expression .) ]
  ! BICONDITIONAL   [ reduce using rule 4 (expression -> expression OR expression .) ]
  ! AND             [ shift and go to state 6 ]
  ! OR              [ shift and go to state 7 ]


state 14

    (5) expression -> expression IMPLICATION expression .
    (3) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (5) expression -> expression . IMPLICATION expression
    (6) expression -> expression . BICONDITIONAL expression

    AND             reduce using rule 5 (expression -> expression IMPLICATION expression .)
    OR              reduce using rule 5 (expression -> expression IMPLICATION expression .)
    IMPLICATION     reduce using rule 5 (expression -> expression IMPLICATION expression .)
    BICONDITIONAL   reduce using rule 5 (expression -> expression IMPLICATION expression .)
    $end            reduce using rule 5 (expression -> expression IMPLICATION expression .)
    RPAREN          reduce using rule 5 (expression -> expression IMPLICATION expression .)

  ! AND             [ shift and go to state 6 ]
  ! OR              [ shift and go to state 7 ]
  ! IMPLICATION     [ shift and go to state 8 ]
  ! BICONDITIONAL   [ shift and go to state 9 ]


state 15

    (6) expression -> expression BICONDITIONAL expression .
    (3) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (5) expression -> expression . IMPLICATION expression
    (6) expression -> expression . BICONDITIONAL expression

    AND             reduce using rule 6 (expression -> expression BICONDITIONAL expression .)
    OR              reduce using rule 6 (expression -> expression BICONDITIONAL expression .)
    IMPLICATION     reduce using rule 6 (expression -> expression BICONDITIONAL expression .)
    BICONDITIONAL   reduce using rule 6 (expression -> expression BICONDITIONAL expression .)
    $end            reduce using rule 6 (expression -> expression BICONDITIONAL expression .)
    RPAREN          reduce using rule 6 (expression -> expression BICONDITIONAL expression .)

  ! AND             [ shift and go to state 6 ]
  ! OR              [ shift and go to state 7 ]
  ! IMPLICATION     [ shift and go to state 8 ]
  ! BICONDITIONAL   [ shift and go to state 9 ]


state 16

    (8) expression -> LPAREN expression RPAREN .

    AND             reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    IMPLICATION     reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    BICONDITIONAL   reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (expression -> LPAREN expression RPAREN .)

